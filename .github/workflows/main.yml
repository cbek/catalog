name: Build
run-name: 'Build & test :: ${{ github.ref }}'

on:
  push:
    branches:
    - "*"  # run for branches
    tags:
    - "!*" # do not run for tags

env:
  TERRAFORM_VERSION: "1.5.7"

jobs:
  #
  #
  # Build artifacts
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.0.0

    # Run builder
    - name: Run builder
      uses: ./.github/actions/builder

    # Upload artifacts
    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v3.1.3
      with:
        name: _dist
        path: _dist/*.zip


  #
  #
  # Run `terraform test`
  test-terraform:
    runs-on: ubuntu-latest

    steps:
    # Checkout
    - uses: actions/checkout@v4.0.0

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_wrapper: false
        terraform_version: "${{ env.TERRAFORM_VERSION }}"

    # Run tests
    - name: Run tests
      run: make test-terraform


  #
  #
  # Test deploy to k3d
  get-matrix:
    runs-on: ubuntu-latest
    needs: build

    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4.0.0

      - name: 'Download build-artifacts'
        uses: actions/download-artifact@v3.0.2
        with:
          name: _dist
          path: _dist

      - id: get-matrix
        uses: ./.github/actions/get-matrix

  test-k3d:
    runs-on: ubuntu-latest
    needs: get-matrix

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-matrix.outputs.matrix) }}

    steps:
    # Checkout
    - uses: actions/checkout@v4.0.0

    # Setup k3d
    - name: Setup k3d
      uses: rinx/setup-k3d@v0.0.4
      with:
        skipClusterCreation: true

    - name: Create k3d cluster
      run: make k3d

    # Download build artifacts
    - name: 'Download build-artifacts'
      uses: actions/download-artifact@v3.0.2
      with:
        name: _dist
        path: _dist

    # Deploy to cluster
    - name: Run test container
      run: make test-k3d test-name=${{ matrix.name }} test-variant=${{ matrix.variant}}


  #
  #
  #
  publish:
    runs-on: ubuntu-latest
    needs: [test-k3d, test-terraform]

    steps:
    # Download build artifacts
    - name: 'Download build-artifacts'
      uses: actions/download-artifact@v3.0.2
      with:
        name: _dist
        path: _dist

    # Upload archive
    - uses: google-github-actions/auth@v1.1.1
      with:
        credentials_json: '${{ secrets.GCLOUD_AUTH }}'

    - uses: google-github-actions/setup-gcloud@v1.1.1

    - run: gsutil -m cp _dist/*.zip gs://dev.catalog.kubestack.com


  #
  #
  # trigger promotion by tagging release
  trigger-promote:
    runs-on: ubuntu-latest
    needs: publish
    if: startsWith(github.ref, 'refs/heads/release-')

    permissions:
      contents: write # required for createRef
      actions: write  # required for createWorkflowDispatch

    steps:
    - uses: actions/github-script@v6
      with:
        script: |
          const tag = context.ref.replace("refs/heads/release-", "refs/tags/")

          await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: tag,
            sha: context.sha,
          });

          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: "promote.yml",
            ref: tag,
          });
